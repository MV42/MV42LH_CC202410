NAME = fdf

COMP		=	$(CC) $(C_FLAGS) $(C_INC) $(C_LDIR) $(C_LIB)
CC			=	cc
C_FLAGS		=	-Wall -Wextra -Werror -g -g3
C_INC		=	$(addprefix -I, $(INC_DIR))
C_LDIR		=	$(addprefix -L, $(LIBFT_DIR) $(MLX_DIR))
C_LIB		=	$(addprefix -l, mlx_Linux m Xext X11 z ft)

INC_DIR		=	include/ $(MLX_DIR) $(LIBFT_DIR)
LIB_DIR		=	lib/
MLX_DIR		=	$(LIB_DIR)minilibx/
LIBFT_DIR	=	$(LIB_DIR)libft/

SRC_DIR		=	src/
OBJ_DIR		=	obj/
BIN_DIR		=	bin/

SRC			=	build_tab.c \
				build_map_utils.c \
				build_map_utils2.c \
				color_utils.c \
				draw_line.c \
				draw_line_utils.c \
				fill_map.c \
				hooks.c \
				rasterize.c \
				test_map.c \
				tests.c \
				window.c

OBJ			=	$(patsubst $(SRC_DIR)%.c, $(OBJ_DIR)%.o, $(SRCS))

all:	clone_lib $(LIBFT_DIR)libft.a $(NAME)

# MLX_GIT		=	git@github.com:42paris/minilibx-linux.git
# LIBFT_GIT	=	git@github.com:MV42/MV42LH_CC202410.git
# clone_lib	:	clone_libft clone_mlx

# clone_libft	: $(LIBFT_DIR).cloned
# $(LIBFT_DIR).cloned:
# 	mkdir -p lib
# 	cd lib && \
# 	git clone --filter=blob:none $(LIBFT_GIT) $(LIBFT_DIR) && \
# 	cd $(LIBFT_DIR) && \
# 	git sparse-checkout init && \
# 	git sparse-checkout set M0/LibFT/libft && \
# 	DEFAULT_BRANCH=$$(git remote show origin | sed -n '/HEAD branch/s/.*: //p') && \
# 	git checkout $$DEFAULT_BRANCH
# 	touch $(LIBFT_DIR).cloned

# clone_mlx	: $(MLX_DIR).cloned
# $(MLX_DIR).cloned:
# 	mkdir -p lib
# 	cd lib && \
# 	git clone --filter=blob:none $(MLX_GIT) $(MLX_DIR) && \
# 	cd $(MLX_DIR) && \
# 	DEFAULT_BRANCH=$$(git remote show origin | sed -n '/HEAD branch/s/.*: //p') && \
# 	git checkout $$DEFAULT_BRANCH
# 	touch $(MLX_DIR).cloned

$(LIBFT_DIR)libft.a:
	@$(MAKE) -C $(LIBFT_DIR)

$(NAME): $(OBJS) $(LIBFT_DIR)libft.a
	$(COMP) $(OBJS) -o $(NAME)

$(OBJ_DIR)%.o: $(SRC_DIR)%.c
	@mkdir -p $(OBJ_DIR)
	$(CC) $(CFLAGS) -c $< -o $@

clean:
	rm -rf $(OBJ_DIR)

fclean: clean
	rm -rf $(BIN_DIR)

re: fclean all

.PHONY: all clean fclean re clone_libft
